{"version":3,"file":"static/js/761.367166c1.chunk.js","mappings":"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","sources":["webpack://aston-app/./src/shared/components/Card/Card.module.scss?559c","shared/icons/FavrIcon.tsx","webpack://aston-app/./src/shared/components/UI/FavButton/FavButton.module.scss?f471","shared/components/UI/FavButton/FavButton.tsx","shared/hooks/useModal.ts","shared/hooks/useIsInFavorite.ts","webpack://aston-app/./src/shared/components/Modal/Modal.module.scss?3248","shared/components/Modal/Modal.tsx","shared/components/Card/Card.tsx","shared/components/Form/Options/index.ts","webpack://aston-app/./src/shared/components/Form/SignInForm/SignInForm.module.scss?d540","shared/components/Form/SignInForm/SignInForm.tsx","webpack://aston-app/./src/shared/components/NothingYet/NothingYet.module.scss?f8c6","shared/components/NothingYet/NothingYet.tsx","webpack://aston-app/./src/shared/components/UI/ErrMessage/ErrMessage.module.scss?4d8b","shared/components/UI/ErrMessage/ErrMessage.tsx","webpack://aston-app/./src/shared/components/UI/Input/Input.module.scss?942a","shared/components/UI/Input/Input.tsx","shared/firebase/hooks/useSIgnIn.tsx","shared/firebase/hooks/useSIgnUp.tsx","webpack://aston-app/./src/shared/components/SearchList/SearchList.module.scss?ffc2","shared/components/SearchList/SearchList.tsx","shared/pages/search/SearchPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"card\":\"Card_card__nHCKW\",\"head\":\"Card_head__P+48E\",\"body\":\"Card_body__Ouj+e\",\"btnWrap\":\"Card_btnWrap__dYi9S\",\"status\":\"Card_status__0HipY\",\"indicator\":\"Card_indicator__Urh8x\",\"Alive\":\"Card_Alive__096Lt\",\"Dead\":\"Card_Dead__jLnrR\",\"unknown\":\"Card_unknown__c1cTY\",\"propWrapper\":\"Card_propWrapper__7VraL\",\"propTitle\":\"Card_propTitle__cR4JB\",\"onLoading\":\"Card_onLoading__8aHTh\",\"anim\":\"Card_anim__o4ZSo\"};","import React from \"react\";\r\n\r\nexport const FavrIcon = () => {\r\n  return (\r\n    <svg\r\n      width=\"50px\"\r\n      height=\"50px\"\r\n      viewBox=\"0 0 50 50\"\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n    >\r\n      <path d=\"M25 39.7l-.6-.5C11.5 28.7 8 25 8 19c0-5 4-9 9-9 4.1 0 6.4 2.3 8 4.1 1.6-1.8 3.9-4.1 8-4.1 5 0 9 4 9 9 0 6-3.5 9.7-16.4 20.2l-.6.5zM17 12c-3.9 0-7 3.1-7 7 0 5.1 3.2 8.5 15 18.1 11.8-9.6 15-13 15-18.1 0-3.9-3.1-7-7-7-3.5 0-5.4 2.1-6.9 3.8L25 17.1l-1.1-1.3C22.4 14.1 20.5 12 17 12z\" />\r\n    </svg>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"FavButton_btn__kajDu\",\"inFavr\":\"FavButton_inFavr__XqBeO\",\"disabled\":\"FavButton_disabled__kfwut\"};","import { FavrIcon } from \"../../../icons/FavrIcon\";\r\nimport styles from \"./FavButton.module.scss\";\r\nimport clsx from \"clsx\";\r\n\r\ninterface FavBtnProps {\r\n  onTogleFavorite: () => void;\r\n  isInFavorite: boolean;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport const FavButton = ({\r\n  isInFavorite,\r\n  onTogleFavorite,\r\n  disabled,\r\n}: FavBtnProps) => {\r\n  return (\r\n    <button\r\n      onClick={onTogleFavorite}\r\n      disabled={disabled}\r\n      className={clsx(\r\n        styles.btn,\r\n        isInFavorite ? styles.inFavr : \"\",\r\n        disabled ? styles.disabled : \"\"\r\n      )}\r\n    >\r\n      <FavrIcon />\r\n    </button>\r\n  );\r\n};\r\n","import { useCallback, useState } from \"react\";\r\n\r\nconst useModal = () => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const onToggleModal = useCallback(() => {\r\n    setIsOpen((open) => !open);\r\n  }, []);\r\n\r\n  return { isOpen, onToggleModal };\r\n};\r\n\r\nexport default useModal;\r\n","import { useCallback, useMemo } from \"react\";\r\nimport { useAppDispatch, useAppSelector } from \"../../api/redux/store\";\r\nimport {\r\n  removeFavorite,\r\n  setFavorite,\r\n} from \"../../api/redux/thunks/favorite-thunk\";\r\nimport {\r\n  selectFavorite,\r\n  selectIsFavoriteError,\r\n  selectIsFavoriteLoading,\r\n  selectUid,\r\n} from \"../../api/redux/selectors\";\r\nimport {\r\n  onNotifyFavoriteAdded,\r\n  onNotifyFavoriteRemoved,\r\n} from \"../utils/notification\";\r\nimport useModal from \"./useModal\";\r\n\r\nconst useIsInFavorite = (cardId: number) => {\r\n  const uid = useAppSelector(selectUid);\r\n  const data = useAppSelector(selectFavorite);\r\n  const isLoading = useAppSelector(selectIsFavoriteLoading);\r\n  const isError = useAppSelector(selectIsFavoriteError);\r\n  const { isOpen, onToggleModal } = useModal();\r\n  const dispatch = useAppDispatch();\r\n  const is = useMemo(() => {\r\n    if (data && data.find((el) => el === cardId.toString())) return true;\r\n    else return false;\r\n  }, [data, cardId]);\r\n\r\n  const onTogleFavorite = useCallback(() => {\r\n    if (uid) {\r\n      if (is) {\r\n        dispatch(removeFavorite({ uid: uid, cardId: cardId }));\r\n        onNotifyFavoriteRemoved();\r\n      } else {\r\n        dispatch(setFavorite({ uid: uid, cardId: cardId }));\r\n        onNotifyFavoriteAdded();\r\n      }\r\n    } else {\r\n      onToggleModal();\r\n    }\r\n  }, [uid, dispatch, cardId, is, onToggleModal]);\r\n\r\n  return {\r\n    favorite: {\r\n      isInfavorite: is,\r\n      onTogleFavorite,\r\n      isLoading,\r\n      isError,\r\n    },\r\n    modal: {\r\n      isModalOpen: isOpen,\r\n      onToggleModal,\r\n    },\r\n  };\r\n};\r\n\r\nexport default useIsInFavorite;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"DialogOverlay\":\"Modal_DialogOverlay__lum+3\",\"overlayShow\":\"Modal_overlayShow__e7REa\",\"DialogContent\":\"Modal_DialogContent__BCppm\",\"contentShow\":\"Modal_contentShow__yTFGN\"};","import * as Dialog from \"@radix-ui/react-dialog\";\r\nimport { SignInForm } from \"../Form/SignInForm/SignInForm\";\r\nimport styles from \"./Modal.module.scss\";\r\n\r\ninterface ModalProps {\r\n  isOpen: boolean;\r\n  toggleModal: () => void;\r\n}\r\n\r\nconst Modal = ({ isOpen, toggleModal }: ModalProps) => (\r\n  <Dialog.Root open={isOpen} onOpenChange={toggleModal}>\r\n    <Dialog.Portal>\r\n      <Dialog.Overlay className={styles.DialogOverlay} />\r\n      <Dialog.Content className={styles.DialogContent}>\r\n        <SignInForm toggleModal={toggleModal} />\r\n      </Dialog.Content>\r\n    </Dialog.Portal>\r\n  </Dialog.Root>\r\n);\r\n\r\nexport default Modal;\r\n","import { Link } from \"react-router-dom\";\r\nimport styles from \"./Card.module.scss\";\r\nimport clsx from \"clsx\";\r\nimport { FavButton } from \"../UI/FavButton/FavButton\";\r\nimport useIsInFavorite from \"../../hooks/useIsInFavorite\";\r\nimport Modal from \"../Modal/Modal\";\r\n\r\nexport type Status = \"Alive\" | \"Dead\" | \"unknown\";\r\nexport type Gender = \"Male\" | \"Female\" | \"Genderless\" | \"unknown\";\r\n\r\nexport interface CharecterCard {\r\n  name: string;\r\n  status: Status;\r\n  gender: Gender;\r\n  location: string;\r\n  image: string;\r\n  id: number;\r\n  episodes?: string[];\r\n}\r\n\r\nexport const Card = ({\r\n  name,\r\n  status,\r\n  gender,\r\n  location,\r\n  image,\r\n  id,\r\n}: CharecterCard) => {\r\n  const { favorite, modal } = useIsInFavorite(id);\r\n\r\n  return (\r\n    <div className={styles.card}>\r\n      <div>\r\n        <Link to={`/${id}`}>\r\n          <img src={image} alt=\"character\" />\r\n        </Link>\r\n        <div className={styles.head}>\r\n          <div className={styles.propWrapper}>\r\n            <span className={styles.propTitle}>Name:</span>\r\n            <p>{name}</p>\r\n          </div>\r\n          <div className={styles.status}>\r\n            <div className={clsx(styles.indicator, styles[status])}></div>\r\n            <p>{status}</p>\r\n          </div>\r\n        </div>\r\n        <div className={styles.body}>\r\n          <div className={styles.propWrapper}>\r\n            <span className={styles.propTitle}>Gender:</span>\r\n            <p>{gender}</p>\r\n          </div>\r\n          <div className={styles.propWrapper}>\r\n            <span className={styles.propTitle}>Location:</span>\r\n            <p>{location}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={styles.btnWrap}>\r\n        <FavButton\r\n          isInFavorite={favorite.isInfavorite}\r\n          onTogleFavorite={favorite.onTogleFavorite}\r\n        />\r\n        <Modal isOpen={modal.isModalOpen} toggleModal={modal.onToggleModal} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import { RegisterOptions } from \"react-hook-form\";\r\nimport { FormFieldValues } from \"../SignUpForm/SignUpForm\";\r\n\r\nexport const EMAIL_OPTIONS: RegisterOptions<FormFieldValues, \"login\"> = {\r\n  required: { value: true, message: \"this field is required *\" },\r\n  pattern: {\r\n    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n    message: \"invalid email address *\",\r\n  },\r\n};\r\n\r\nexport const PASSWORD_OPTIONS: RegisterOptions<FormFieldValues, \"password\"> = {\r\n  required: { value: true, message: \"this filed is required *\" },\r\n  minLength: {\r\n    value: 6,\r\n    message: \"min-lenght of password is 6 charecters *\",\r\n  },\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SignInForm_form__a6eBx\",\"anim\":\"SignInForm_anim__af9Sx\",\"inputsWrap\":\"SignInForm_inputsWrap__CKy10\",\"btnWrapp\":\"SignInForm_btnWrapp__V1e3m\",\"redirect\":\"SignInForm_redirect__-zjD+\",\"loading\":\"SignInForm_loading__N6Iwc\"};","import { SubmitHandler, useForm } from \"react-hook-form\";\r\nimport styles from \"./SignInForm.module.scss\";\r\nimport { Button } from \"../../UI/Button/Button\";\r\nimport { LogoIcon } from \"../../../icons/LogoIcon\";\r\nimport { ErrMessage } from \"../../UI/ErrMessage/ErrMessage\";\r\nimport { auth } from \"../../../firebase/firebase\";\r\nimport { useSigneIn } from \"../../../firebase/hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Input } from \"../../UI/Input/Input\";\r\nimport { EMAIL_OPTIONS, PASSWORD_OPTIONS } from \"../Options\";\r\nimport { FormFieldValues } from \"../SignUpForm/SignUpForm\";\r\nimport PropTypes from \"prop-types\";\r\n\r\ninterface SignInFormProps {\r\n  toggleModal?: () => void;\r\n}\r\n\r\nexport const SignInForm = ({ toggleModal }: SignInFormProps) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm<FormFieldValues>();\r\n\r\n  const { registerUserWithEmailAndPassword, loading, error } = useSigneIn(auth);\r\n\r\n  const onSubmit: SubmitHandler<FormFieldValues> = async (data) => {\r\n    await registerUserWithEmailAndPassword(data.login, data.password);\r\n    setValue(\"login\", \"\");\r\n    setValue(\"password\", \"\");\r\n    if (toggleModal) {\r\n      toggleModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit(onSubmit)}>\r\n      <LogoIcon />\r\n      <div className={styles.inputsWrap}>\r\n        <Input\r\n          labelName=\"Email\"\r\n          errors={errors.login}\r\n          disabled={loading}\r\n          id=\"email\"\r\n          placeholder=\"Enter your email\"\r\n          register={register(\"login\", EMAIL_OPTIONS)}\r\n        />\r\n        <Input\r\n          labelName=\"Password\"\r\n          errors={errors.password}\r\n          disabled={loading}\r\n          id=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Enter your password\"\r\n          register={register(\"password\", PASSWORD_OPTIONS)}\r\n        />\r\n      </div>\r\n      <div className={styles.btnWrapp}>\r\n        <Button\r\n          className={loading ? styles.loading : \"\"}\r\n          variant=\"Primary\"\r\n          fill\r\n          type=\"submit\"\r\n        >\r\n          {\" Sign In!\"}\r\n        </Button>\r\n\r\n        <Link className={styles.redirect} to={\"/signup\"}>\r\n          Does't have an accoun yet?\r\n        </Link>\r\n      </div>\r\n      {error && <ErrMessage>{error.message}</ErrMessage>}\r\n    </form>\r\n  );\r\n};\r\n\r\nSignInForm.propTypes = {\r\n  toggleModal: PropTypes.func,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"NothingYet_wrapper__aACNZ\",\"visible\":\"NothingYet_visible__I5UrK\"};","import clsx from \"clsx\";\r\n\r\nimport styles from \"./NothingYet.module.scss\";\r\n\r\nexport const NothingYet = ({ isLoading }: { isLoading: boolean }) => {\r\n  return (\r\n    <div className={clsx(styles.wrapper, !isLoading ? styles.visible : \"\")}>\r\n      <h2>There is nothing yet</h2>\r\n    </div>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"msg\":\"ErrMessage_msg__wb0Tb\"};","import styles from \"./ErrMessage.module.scss\";\r\ninterface IErrMessageProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const ErrMessage = ({ children }: IErrMessageProps) => {\r\n  return <span className={styles.msg}>{children}</span>;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__xm9VQ\",\"inptWrap\":\"Input_inptWrap__Vx1sT\"};","import { FieldError, UseFormRegisterReturn } from \"react-hook-form\";\r\nimport { ErrMessage } from \"../ErrMessage/ErrMessage\";\r\nimport styles from \"./Input.module.scss\";\r\n\r\ninterface InputProps {\r\n  disabled: boolean;\r\n  labelName: string;\r\n  id: string;\r\n  placeholder: string;\r\n  register: UseFormRegisterReturn<\"login\" | \"password\">;\r\n  errors: FieldError | undefined;\r\n  type?: React.HTMLInputTypeAttribute;\r\n}\r\n\r\nexport const Input: React.FC<InputProps> = (props) => {\r\n  return (\r\n    <div className={styles.inptWrap}>\r\n      <label htmlFor=\"name\">{props.labelName}</label>\r\n      <input className={styles.input} {...props} {...props.register} />\r\n      {props.errors && <ErrMessage>{props.errors.message}</ErrMessage>}\r\n    </div>\r\n  );\r\n};\r\n","import { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nimport React from \"react\";\r\nimport { Auth, AuthError, signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nexport const useSigneIn = (auth: Auth) => {\r\n  const [error, setError] = React.useState<AuthError>();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const navigate = useNavigate();\r\n  const { state } = useLocation();\r\n\r\n  const registerUserWithEmailAndPassword = React.useCallback(\r\n    async (email: string, password: string) => {\r\n      setLoading(true);\r\n      setError(undefined);\r\n      await signInWithEmailAndPassword(auth, email, password)\r\n        .then(() => {\r\n          navigate(state ?? \"/\");\r\n        })\r\n        .catch((err) => setError(err as AuthError))\r\n        .finally(() => setLoading(false));\r\n    },\r\n    [auth, navigate, state]\r\n  );\r\n\r\n  return { registerUserWithEmailAndPassword, loading, error };\r\n};\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { Auth, createUserWithEmailAndPassword, AuthError } from \"firebase/auth\";\r\nimport { useState } from \"react\";\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\nimport { database } from \"../firebase\";\r\n\r\nexport const useSigneUp = (auth: Auth) => {\r\n  const [error, setError] = useState<AuthError>();\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const registerUserWithEmailAndPassword = React.useCallback(\r\n    async (email: string, password: string) => {\r\n      setLoading(true);\r\n      setError(undefined);\r\n      await createUserWithEmailAndPassword(auth, email, password)\r\n        .then(async (user) => {\r\n          await setDoc(doc(database, \"users\", user.user.uid), {\r\n            name: \"user\",\r\n            email: email,\r\n            password: password,\r\n            history: [],\r\n            favorites: [],\r\n          });\r\n          navigate(-1);\r\n        })\r\n        .catch((err) => setError(err as AuthError))\r\n        .finally(() => setLoading(false));\r\n    },\r\n    [auth, navigate]\r\n  );\r\n\r\n  return { registerUserWithEmailAndPassword, loading, error };\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"charList\":\"SearchList_charList__g-YgL\",\"anim\":\"SearchList_anim__R1SKQ\",\"moreBtn\":\"SearchList_moreBtn__zW3SL\",\"title\":\"SearchList_title__iJqwB\"};","import { useFindCharactersByNameQuery } from \"../../../api/redux/api/card-api\";\r\nimport { Card } from \"../Card/Card\";\r\nimport { Loading } from \"../Loading/Loading\";\r\nimport styles from \"./SearchList.module.scss\";\r\n\r\ninterface SearchListProps {\r\n  keyword: string;\r\n}\r\n\r\nexport const SearchList = ({ keyword }: SearchListProps) => {\r\n  const { data, isError, isFetching } = useFindCharactersByNameQuery(keyword);\r\n\r\n  return (\r\n    <>\r\n      <p className={styles.title}>{`Search by keyword: ${keyword}`}</p>\r\n\r\n      {isError ? (\r\n        <h4>Nothing found</h4>\r\n      ) : (\r\n        <div className={styles.charList}>\r\n          {data && data.map((char, i) => <Card key={i} {...char} />)}\r\n        </div>\r\n      )}\r\n      <Loading isLoading={isFetching} />\r\n    </>\r\n  );\r\n};\r\n","import { useSearchParams } from \"react-router-dom\";\r\n\r\nimport { SearchList } from \"../../components/SearchList/SearchList\";\r\nimport { NothingYet } from \"../../components/NothingYet/NothingYet\";\r\n\r\nconst useSearchParamsHook = (): string | null => {\r\n  const [searchParams] = useSearchParams();\r\n  return searchParams.get(\"name\");\r\n};\r\n\r\nconst SearchPage = () => {\r\n  const query = useSearchParamsHook();\r\n\r\n  return (\r\n    <section className=\"section\">\r\n      {query ? (\r\n        <SearchList keyword={query} />\r\n      ) : (\r\n        <NothingYet isLoading={false} />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SearchPage;\r\n"],"names":["FavrIcon","_jsx","width","height","viewBox","xmlns","children","d","FavButton","_ref","isInFavorite","onTogleFavorite","disabled","onClick","className","clsx","styles","useModal","isOpen","setIsOpen","useState","onToggleModal","useCallback","open","cardId","uid","useAppSelector","selectUid","data","selectFavorite","isLoading","selectIsFavoriteLoading","isError","selectIsFavoriteError","dispatch","useAppDispatch","is","useMemo","find","el","toString","removeFavorite","onNotifyFavoriteRemoved","setFavorite","onNotifyFavoriteAdded","favorite","isInfavorite","modal","isModalOpen","toggleModal","Dialog","onOpenChange","_jsxs","SignInForm","Card","name","status","gender","location","image","id","useIsInFavorite","card","Link","to","concat","src","alt","head","propWrapper","propTitle","indicator","body","btnWrap","Modal","EMAIL_OPTIONS","required","value","message","pattern","PASSWORD_OPTIONS","minLength","register","handleSubmit","setValue","formState","errors","useForm","registerUserWithEmailAndPassword","loading","error","useSigneIn","auth","onSubmit","async","login","password","LogoIcon","Input","labelName","placeholder","type","Button","variant","fill","ErrMessage","NothingYet","props","htmlFor","setError","React","setLoading","navigate","useNavigate","state","useLocation","email","undefined","signInWithEmailAndPassword","then","catch","err","finally","useSigneUp","createUserWithEmailAndPassword","setDoc","doc","database","user","history","favorites","SearchList","keyword","isFetching","useFindCharactersByNameQuery","_Fragment","map","char","i","Loading","SearchPage","query","useSearchParamsHook","searchParams","useSearchParams","get"],"sourceRoot":""}