{"version":3,"file":"static/js/113.ad23dea4.chunk.js","mappings":"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","sources":["shared/components/Form/Options/index.ts","webpack://aston-app/./src/shared/components/Form/SignInForm/SignInForm.module.scss?d540","shared/components/Form/SignInForm/SignInForm.tsx","webpack://aston-app/./src/shared/components/UI/ErrMessage/ErrMessage.module.scss?4d8b","shared/components/UI/ErrMessage/ErrMessage.tsx","webpack://aston-app/./src/shared/components/UI/Input/Input.module.scss?942a","shared/components/UI/Input/Input.tsx","shared/firebase/hooks/useSIgnIn.tsx","shared/firebase/hooks/useSIgnUp.tsx","shared/pages/signin/SignInPage.tsx"],"sourcesContent":["import { RegisterOptions } from \"react-hook-form\";\r\nimport { FormFieldValues } from \"../SignUpForm/SignUpForm\";\r\n\r\nexport const EMAIL_OPTIONS: RegisterOptions<FormFieldValues, \"login\"> = {\r\n  required: { value: true, message: \"this field is required *\" },\r\n  pattern: {\r\n    value: /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i,\r\n    message: \"invalid email address *\",\r\n  },\r\n};\r\n\r\nexport const PASSWORD_OPTIONS: RegisterOptions<FormFieldValues, \"password\"> = {\r\n  required: { value: true, message: \"this filed is required *\" },\r\n  minLength: {\r\n    value: 6,\r\n    message: \"min-lenght of password is 6 charecters *\",\r\n  },\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"SignInForm_form__a6eBx\",\"anim\":\"SignInForm_anim__af9Sx\",\"inputsWrap\":\"SignInForm_inputsWrap__CKy10\",\"btnWrapp\":\"SignInForm_btnWrapp__V1e3m\",\"redirect\":\"SignInForm_redirect__-zjD+\",\"loading\":\"SignInForm_loading__N6Iwc\"};","import { SubmitHandler, useForm } from \"react-hook-form\";\r\nimport styles from \"./SignInForm.module.scss\";\r\nimport { Button } from \"../../UI/Button/Button\";\r\nimport { LogoIcon } from \"../../../icons/LogoIcon\";\r\nimport { ErrMessage } from \"../../UI/ErrMessage/ErrMessage\";\r\nimport { auth } from \"../../../firebase/firebase\";\r\nimport { useSigneIn } from \"../../../firebase/hooks\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Input } from \"../../UI/Input/Input\";\r\nimport { EMAIL_OPTIONS, PASSWORD_OPTIONS } from \"../Options\";\r\nimport { FormFieldValues } from \"../SignUpForm/SignUpForm\";\r\nimport PropTypes from \"prop-types\";\r\n\r\ninterface SignInFormProps {\r\n  toggleModal?: () => void;\r\n}\r\n\r\nexport const SignInForm = ({ toggleModal }: SignInFormProps) => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    setValue,\r\n    formState: { errors },\r\n  } = useForm<FormFieldValues>();\r\n\r\n  const { registerUserWithEmailAndPassword, loading, error } = useSigneIn(auth);\r\n\r\n  const onSubmit: SubmitHandler<FormFieldValues> = async (data) => {\r\n    await registerUserWithEmailAndPassword(data.login, data.password);\r\n    setValue(\"login\", \"\");\r\n    setValue(\"password\", \"\");\r\n    if (toggleModal) {\r\n      toggleModal();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit(onSubmit)}>\r\n      <LogoIcon />\r\n      <div className={styles.inputsWrap}>\r\n        <Input\r\n          labelName=\"Email\"\r\n          errors={errors.login}\r\n          disabled={loading}\r\n          id=\"email\"\r\n          placeholder=\"Enter your email\"\r\n          register={register(\"login\", EMAIL_OPTIONS)}\r\n        />\r\n        <Input\r\n          labelName=\"Password\"\r\n          errors={errors.password}\r\n          disabled={loading}\r\n          id=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Enter your password\"\r\n          register={register(\"password\", PASSWORD_OPTIONS)}\r\n        />\r\n      </div>\r\n      <div className={styles.btnWrapp}>\r\n        <Button\r\n          className={loading ? styles.loading : \"\"}\r\n          variant=\"Primary\"\r\n          fill\r\n          type=\"submit\"\r\n        >\r\n          {\" Sign In!\"}\r\n        </Button>\r\n\r\n        <Link className={styles.redirect} to={\"/signup\"}>\r\n          Does't have an accoun yet?\r\n        </Link>\r\n      </div>\r\n      {error && <ErrMessage>{error.message}</ErrMessage>}\r\n    </form>\r\n  );\r\n};\r\n\r\nSignInForm.propTypes = {\r\n  toggleModal: PropTypes.func,\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"msg\":\"ErrMessage_msg__wb0Tb\"};","import styles from \"./ErrMessage.module.scss\";\r\ninterface IErrMessageProps {\r\n  children: React.ReactNode;\r\n}\r\n\r\nexport const ErrMessage = ({ children }: IErrMessageProps) => {\r\n  return <span className={styles.msg}>{children}</span>;\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Input_input__xm9VQ\",\"inptWrap\":\"Input_inptWrap__Vx1sT\"};","import { FieldError, UseFormRegisterReturn } from \"react-hook-form\";\r\nimport { ErrMessage } from \"../ErrMessage/ErrMessage\";\r\nimport styles from \"./Input.module.scss\";\r\n\r\ninterface InputProps {\r\n  disabled: boolean;\r\n  labelName: string;\r\n  id: string;\r\n  placeholder: string;\r\n  register: UseFormRegisterReturn<\"login\" | \"password\">;\r\n  errors: FieldError | undefined;\r\n  type?: React.HTMLInputTypeAttribute;\r\n}\r\n\r\nexport const Input: React.FC<InputProps> = (props) => {\r\n  return (\r\n    <div className={styles.inptWrap}>\r\n      <label htmlFor=\"name\">{props.labelName}</label>\r\n      <input className={styles.input} {...props} {...props.register} />\r\n      {props.errors && <ErrMessage>{props.errors.message}</ErrMessage>}\r\n    </div>\r\n  );\r\n};\r\n","import { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\nimport React from \"react\";\r\nimport { Auth, AuthError, signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\nexport const useSigneIn = (auth: Auth) => {\r\n  const [error, setError] = React.useState<AuthError>();\r\n  const [loading, setLoading] = React.useState(false);\r\n  const navigate = useNavigate();\r\n  const { state } = useLocation();\r\n\r\n  const registerUserWithEmailAndPassword = React.useCallback(\r\n    async (email: string, password: string) => {\r\n      setLoading(true);\r\n      setError(undefined);\r\n      await signInWithEmailAndPassword(auth, email, password)\r\n        .then(() => {\r\n          navigate(state ?? \"/\");\r\n        })\r\n        .catch((err) => setError(err as AuthError))\r\n        .finally(() => setLoading(false));\r\n    },\r\n    [auth, navigate, state]\r\n  );\r\n\r\n  return { registerUserWithEmailAndPassword, loading, error };\r\n};\r\n","import { useNavigate } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport { Auth, createUserWithEmailAndPassword, AuthError } from \"firebase/auth\";\r\nimport { useState } from \"react\";\r\nimport { doc, setDoc } from \"firebase/firestore\";\r\nimport { database } from \"../firebase\";\r\n\r\nexport const useSigneUp = (auth: Auth) => {\r\n  const [error, setError] = useState<AuthError>();\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const registerUserWithEmailAndPassword = React.useCallback(\r\n    async (email: string, password: string) => {\r\n      setLoading(true);\r\n      setError(undefined);\r\n      await createUserWithEmailAndPassword(auth, email, password)\r\n        .then(async (user) => {\r\n          await setDoc(doc(database, \"users\", user.user.uid), {\r\n            name: \"user\",\r\n            email: email,\r\n            password: password,\r\n            history: [],\r\n            favorites: [],\r\n          });\r\n          navigate(-1);\r\n        })\r\n        .catch((err) => setError(err as AuthError))\r\n        .finally(() => setLoading(false));\r\n    },\r\n    [auth, navigate]\r\n  );\r\n\r\n  return { registerUserWithEmailAndPassword, loading, error };\r\n};\r\n","import { SignInForm } from \"../../components/Form/SignInForm/SignInForm\";\r\n\r\nconst SignInPage = () => {\r\n  return (\r\n    <section className=\"section\">\r\n      <SignInForm />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default SignInPage;\r\n"],"names":["EMAIL_OPTIONS","required","value","message","pattern","PASSWORD_OPTIONS","minLength","SignInForm","_ref","toggleModal","register","handleSubmit","setValue","formState","errors","useForm","registerUserWithEmailAndPassword","loading","error","useSigneIn","auth","_jsxs","className","styles","onSubmit","async","data","login","password","children","_jsx","LogoIcon","Input","labelName","disabled","id","placeholder","type","Button","variant","fill","Link","to","ErrMessage","props","htmlFor","setError","React","setLoading","navigate","useNavigate","state","useLocation","email","undefined","signInWithEmailAndPassword","then","catch","err","finally","useSigneUp","useState","createUserWithEmailAndPassword","setDoc","doc","database","user","uid","name","history","favorites","SignInPage"],"sourceRoot":""}